language: cpp
python:
  - "2.7"
matrix:
  include:
    - env: PLATFORM=ios BINDINGS_ARGS="platform=ios generate_bindings=True bits=64 target=release" DRIVER_ARGS="p=ios target=release dynamic=no"
      os: osx
      osx_image: xcode10.2
      compiler: clang
      addons:
        homebrew:
          packages:
            - jq
            - scons
          update: true
    - env: PLATFORM=linux BINDINGS_ARGS="use_llvm=yes platform=linux generate_bindings=True bits=64 target=release clang-path=/usr/local/clang-5.0.0/bin/" DRIVER_ARGS="p=linux use_llvm=yes target=release clang-path=/usr/local/clang-5.0.0/bin/"
      os: linux
      compiler: clang
    - env: PLATFORM=android BINDINGS_ARGS="" DRIVER_ARGS="NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk  APP_PLATFORM=android-21" ANDROID_NDK_ROOT="/home/travis/build/utopia-rise/android-sdk/ndk-bundle"
      os: linux
    - env: PLATFORM=osx BINDINGS_ARGS="platform=osx generate_bindings=True bits=64 target=release" DRIVER_ARGS="p=osx target=release"
      os: osx
      compiler: clang
      addons:
        homebrew:
          packages:
            - jq
            - scons
          update: true
    - env: PLATFORM=windows BINDINGS_ARGS="platform=windows generate_bindings=True bits=64 target=release" DRIVER_ARGS="p=windows target=release"
      os: windows
      compiler: clang
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then wget -O Python27.zip http://prdownloads.sourceforge.net/scons/scons-local-3.0.5.zip && mv Python27.zip C:/Python27.zip && 7z x C:/Python27.zip -oC:/ && export PATH="/c/Python27:/c/Python27/Scripts:$PATH"; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then wget -O scons.zip http://prdownloads.sourceforge.net/scons/scons-local-3.0.5.zip && mv scons.zip C:/scons.zip && 7z x C:/scons.zip -oC:/scons; fi
  - cd ..
  - if [[ "$PLATFORM" == "android" ]]; then sh fmod-gdnative/.travis/download-ndk.sh; fi
  - mkdir libs && cd libs
  - mkdir fmod && cd fmod
  - wget https://gist.githubusercontent.com/piiertho/cfa1d9820f149b612dd60ec642ccb137/raw/1586aff48a646b2f4309a8fd4d4eea431f342ebe/getFmodAPI.sh
  - chmod +x getFmodAPI.sh
  - ./getFmodAPI.sh $FMODUSER $FMODPASS $PLATFORM
  - if [[ "$PLATFORM" == "linux" ]]; then tar -xvf fmodstudioapi11012linux.tar.gz; fi
  - if [[ "$PLATFORM" == "osx" ]]; then hdiutil attach fmodstudioapi11012osx.dmg; fi
  - if [[ "$PLATFORM" == "windows" ]]; then 7z x fmodstudioapi11012win-installer.exe; fi
  - if [[ "$PLATFORM" == "ios" ]]; then hdiutil attach fmodstudioapi11012ios.dmg; fi
  - if [[ "$PLATFORM" == "android" ]]; then tar -xvf fmodstudioapi11012android.tar.gz; fi
  - if [[ "$PLATFORM" == "linux" ]]; then mv fmodstudioapi11012linux/api linux; fi
  - if [[ "$PLATFORM" == "osx" ]]; then cp -r "/Volumes/FMOD Programmers API Mac/FMOD Programmers API/api" osx; fi
  - if [[ "$PLATFORM" == "windows" ]]; then mv api/ windows && mv windows/lowlevel/lib/fmod_vc.lib windows/lowlevel/lib/fmod.lib && mv windows/lowlevel/lib/fmod64_vc.lib windows/lowlevel/lib/fmod64.lib && mv windows/studio/lib/fmodstudio_vc.lib windows/studio/lib/fmodstudio.lib && mv windows/studio/lib/fmodstudio64_vc.lib windows/studio/lib/fmodstudio64.lib; fi
  - if [[ "$PLATFORM" == "ios" ]]; then cp -r "/Volumes/FMOD Programmers API iOS/FMOD Programmers API/api" ios; fi
  - if [[ "$PLATFORM" == "android" ]]; then mv fmodstudioapi11012android/api android; fi
  - cd ../../
  - git clone --recursive  https://github.com/utopia-rise/godot-cpp godot-cpp
  - cd godot-cpp
  - git checkout 3.1-utopia
install:
  - if [[ "$PLATFORM" == "android" ]]; then scons platform=android generate_bindings=True bits=64 target=release android-abi=arm && scons platform=android generate_bindings=True bits=64 target=release android-abi=arm64 && cd ../fmod-gdnative; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then C:/scons/scons.bat $BINDINGS_ARGS && cd ../fmod-gdnative; elif [[ "$PLATFORM" != "android" ]]; then scons $BINDINGS_ARGS && cd ../fmod-gdnative; fi
script: if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then C:/scons/scons.bat $DRIVER_ARGS; elif [[ "$PLATFORM" == "android" ]]; then $ANDROID_NDK_ROOT/ndk-build $DRIVER_ARGS; else scons $DRIVER_ARGS; fi
deploy:
  provider: releases
  api_key:
    secure: $TRAVIS_TOKEN
  file:
    - "bin/libGodotFmod.linux.so"
    - "bin/libGodotFmod.osx.dylib"
    - "bin/libGodotFmod.windows.dll"
    - "bin/libGodotFmod.ios.a"
    - "../godot-cpp/bin/libgodot-cpp.ios.release.a"
    - "libs/armeabi-v7a/libandroid_fmod_gdnative.so"
    - "libs/arm64-v8a/libandroid_fmod_gdnative.so"
  skip_cleanup: true
  on:
    tags: true